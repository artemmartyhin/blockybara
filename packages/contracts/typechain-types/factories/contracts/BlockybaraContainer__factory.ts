/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../common";
import type {
  BlockybaraContainer,
  BlockybaraContainerInterface,
} from "../../contracts/BlockybaraContainer";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "fetch",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchAll",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permissions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "id",
        type: "uint256[]",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "id",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "write",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161168b38038061168b8339818101604052810190610032919061023a565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c9190610276565b60405180910390fd5b6100b48161011360201b60201c565b506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050610291565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610207826101dc565b9050919050565b610217816101fc565b811461022257600080fd5b50565b6000815190506102348161020e565b92915050565b6000602082840312156102505761024f6101d7565b5b600061025e84828501610225565b91505092915050565b610270816101fc565b82525050565b600060208201905061028b6000830184610267565b92915050565b6113eb806102a06000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063722485d71161005b578063722485d7146101015780637a33e3b01461011d5780638da5cb5b1461014d578063f2fde38b1461016b57610088565b806301e882081461008d57806327ec486c146100bd5780634a0fa538146100db578063715018a6146100f7575b600080fd5b6100a760048036038101906100a29190610871565b610187565b6040516100b491906108b9565b60405180910390f35b6100c56101a7565b6040516100d29190610a26565b60405180910390f35b6100f560048036038101906100f09190610bc6565b610312565b005b6100ff61038a565b005b61011b60048036038101906101169190610da5565b61039e565b005b61013760048036038101906101329190610e1d565b6104fb565b6040516101449190610e94565b60405180910390f35b6101556105a0565b6040516101629190610ec5565b60405180910390f35b61018560048036038101906101809190610871565b6105c9565b005b60036020528060005260406000206000915054906101000a900460ff1681565b6060600060025467ffffffffffffffff8111156101c7576101c6610a4d565b5b6040519080825280602002602001820160405280156101fa57816020015b60608152602001906001900390816101e55790505b5090506000805b60025481101561030957600060016000838152602001908152602001600020805461022b90610f0f565b905011156102fc5760016000828152602001908152602001600020805461025190610f0f565b80601f016020809104026020016040519081016040528092919081815260200182805461027d90610f0f565b80156102ca5780601f1061029f576101008083540402835291602001916102ca565b820191906000526020600020905b8154815290600101906020018083116102ad57829003601f168201915b50505050508383815181106102e2576102e1610f40565b5b602002602001018190525081806102f890610f9e565b9250505b8080600101915050610201565b50819250505090565b61031a61064f565b60005b815181101561036c576001600083838151811061033d5761033c610f40565b5b60200260200101518152602001908152602001600020600061035f91906107a2565b808060010191505061031d565b508051600260008282546103809190610fe6565b9250508190555050565b61039261064f565b61039c60006106d6565b565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661042a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042190611077565b60405180910390fd5b805182511461046e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610465906110e3565b60405180910390fd5b60005b82518110156104dc5781818151811061048d5761048c610f40565b5b6020026020010151600160008584815181106104ac576104ab610f40565b5b6020026020010151815260200190815260200160002090816104ce91906112af565b508080600101915050610471565b508151600260008282546104f09190611381565b925050819055505050565b606060016000838152602001908152602001600020805461051b90610f0f565b80601f016020809104026020016040519081016040528092919081815260200182805461054790610f0f565b80156105945780601f1061056957610100808354040283529160200191610594565b820191906000526020600020905b81548152906001019060200180831161057757829003601f168201915b50505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105d161064f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106435760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161063a9190610ec5565b60405180910390fd5b61064c816106d6565b50565b61065761079a565b73ffffffffffffffffffffffffffffffffffffffff166106756105a0565b73ffffffffffffffffffffffffffffffffffffffff16146106d45761069861079a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106cb9190610ec5565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b5080546107ae90610f0f565b6000825580601f106107c057506107df565b601f0160209004906000526020600020908101906107de91906107e2565b5b50565b5b808211156107fb5760008160009055506001016107e3565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083e82610813565b9050919050565b61084e81610833565b811461085957600080fd5b50565b60008135905061086b81610845565b92915050565b60006020828403121561088757610886610809565b5b60006108958482850161085c565b91505092915050565b60008115159050919050565b6108b38161089e565b82525050565b60006020820190506108ce60008301846108aa565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561093a57808201518184015260208101905061091f565b60008484015250505050565b6000601f19601f8301169050919050565b600061096282610900565b61096c818561090b565b935061097c81856020860161091c565b61098581610946565b840191505092915050565b600061099c8383610957565b905092915050565b6000602082019050919050565b60006109bc826108d4565b6109c681856108df565b9350836020820285016109d8856108f0565b8060005b85811015610a1457848403895281516109f58582610990565b9450610a00836109a4565b925060208a019950506001810190506109dc565b50829750879550505050505092915050565b60006020820190508181036000830152610a4081846109b1565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a8582610946565b810181811067ffffffffffffffff82111715610aa457610aa3610a4d565b5b80604052505050565b6000610ab76107ff565b9050610ac38282610a7c565b919050565b600067ffffffffffffffff821115610ae357610ae2610a4d565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b610b0c81610af9565b8114610b1757600080fd5b50565b600081359050610b2981610b03565b92915050565b6000610b42610b3d84610ac8565b610aad565b90508083825260208201905060208402830185811115610b6557610b64610af4565b5b835b81811015610b8e5780610b7a8882610b1a565b845260208401935050602081019050610b67565b5050509392505050565b600082601f830112610bad57610bac610a48565b5b8135610bbd848260208601610b2f565b91505092915050565b600060208284031215610bdc57610bdb610809565b5b600082013567ffffffffffffffff811115610bfa57610bf961080e565b5b610c0684828501610b98565b91505092915050565b600067ffffffffffffffff821115610c2a57610c29610a4d565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff821115610c5b57610c5a610a4d565b5b610c6482610946565b9050602081019050919050565b82818337600083830152505050565b6000610c93610c8e84610c40565b610aad565b905082815260208101848484011115610caf57610cae610c3b565b5b610cba848285610c71565b509392505050565b600082601f830112610cd757610cd6610a48565b5b8135610ce7848260208601610c80565b91505092915050565b6000610d03610cfe84610c0f565b610aad565b90508083825260208201905060208402830185811115610d2657610d25610af4565b5b835b81811015610d6d57803567ffffffffffffffff811115610d4b57610d4a610a48565b5b808601610d588982610cc2565b85526020850194505050602081019050610d28565b5050509392505050565b600082601f830112610d8c57610d8b610a48565b5b8135610d9c848260208601610cf0565b91505092915050565b60008060408385031215610dbc57610dbb610809565b5b600083013567ffffffffffffffff811115610dda57610dd961080e565b5b610de685828601610b98565b925050602083013567ffffffffffffffff811115610e0757610e0661080e565b5b610e1385828601610d77565b9150509250929050565b600060208284031215610e3357610e32610809565b5b6000610e4184828501610b1a565b91505092915050565b600082825260208201905092915050565b6000610e6682610900565b610e708185610e4a565b9350610e8081856020860161091c565b610e8981610946565b840191505092915050565b60006020820190508181036000830152610eae8184610e5b565b905092915050565b610ebf81610833565b82525050565b6000602082019050610eda6000830184610eb6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f2757607f821691505b602082108103610f3a57610f39610ee0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fa982610af9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610fdb57610fda610f6f565b5b600182019050919050565b6000610ff182610af9565b9150610ffc83610af9565b925082820390508181111561101457611013610f6f565b5b92915050565b600082825260208201905092915050565b7f7065726d697373696f6e2064656e696564000000000000000000000000000000600082015250565b600061106160118361101a565b915061106c8261102b565b602082019050919050565b6000602082019050818103600083015261109081611054565b9050919050565b7f696420616e642064617461206c656e677468206d69736d617463680000000000600082015250565b60006110cd601b8361101a565b91506110d882611097565b602082019050919050565b600060208201905081810360008301526110fc816110c0565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111657fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611128565b61116f8683611128565b95508019841693508086168417925050509392505050565b6000819050919050565b60006111ac6111a76111a284610af9565b611187565b610af9565b9050919050565b6000819050919050565b6111c683611191565b6111da6111d2826111b3565b848454611135565b825550505050565b600090565b6111ef6111e2565b6111fa8184846111bd565b505050565b5b8181101561121e576112136000826111e7565b600181019050611200565b5050565b601f8211156112635761123481611103565b61123d84611118565b8101602085101561124c578190505b61126061125885611118565b8301826111ff565b50505b505050565b600082821c905092915050565b600061128660001984600802611268565b1980831691505092915050565b600061129f8383611275565b9150826002028217905092915050565b6112b882610900565b67ffffffffffffffff8111156112d1576112d0610a4d565b5b6112db8254610f0f565b6112e6828285611222565b600060209050601f8311600181146113195760008415611307578287015190505b6113118582611293565b865550611379565b601f19841661132786611103565b60005b8281101561134f5784890151825560018201915060208501945060208101905061132a565b8683101561136c5784890151611368601f891682611275565b8355505b6001600288020188555050505b505050505050565b600061138c82610af9565b915061139783610af9565b92508282019050808211156113af576113ae610f6f565b5b9291505056fea2646970667358221220a39d232abffd0242029e94cec1dc0f561780b32c52ab258413ba96d0fc2affd364736f6c63430008190033";

type BlockybaraContainerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockybaraContainerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockybaraContainer__factory extends ContractFactory {
  constructor(...args: BlockybaraContainerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override deploy(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner, overrides || {}) as Promise<
      BlockybaraContainer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BlockybaraContainer__factory {
    return super.connect(runner) as BlockybaraContainer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockybaraContainerInterface {
    return new Interface(_abi) as BlockybaraContainerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BlockybaraContainer {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BlockybaraContainer;
  }
}
